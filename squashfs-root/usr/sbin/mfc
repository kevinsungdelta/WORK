#!/bin/sh
case "$1" in
save)
	/etc/scripts/dbsave.sh
	;;
freset)
	devconf del
	;;
isfreset)
	SIZE=`devconf dump | scut -p "Data size :" -f 1`
	if [ "$SIZE" = "0" ]; then
		echo "YES"
	else
		echo "NO"
	fi
	;;
init)
	if [ $# -ne 11 ]; then
		echo "Usage:"
		echo "  mfc init <lanmac> <wlan24mac> <wlan5mac> <wanmac> <countrycode> <hw version> <pin> <wifipassword> <wlan24ssid> <wlan5ssid>"
		exit 1
	fi
	LANMAC=`echo -e $2 | tr [A-Z] [a-z]`
	WLAN24MAC=`echo -e $3 | tr [A-Z] [a-z]`
	WLAN5MAC=`echo -e $4 | tr [A-Z] [a-z]`
	WANMAC=`echo -e $5 | tr [A-Z] [a-z]`
	CCODE="$6"
	HWVER="$7"
	PIN="$8"
	WIFIPWD="$9"
	WLAN24SSID="${10}"
	WLAN5SSID="${11}"
	[ "$LANMAC" != "" ] && DEVDATA="$DEVDATA -e lanmac=$LANMAC -e wlan24mac=$WLAN24MAC -e wlan5mac=$WLAN5MAC"
	[ "$WANMAC" != "" ] && DEVDATA="$DEVDATA -e wanmac=$WANMAC"
	[ "$CCODE" = "" ] && CCODE="US"
	[ "$HWVER" != "" ] && DEVDATA="$DEVDATA -e hwver=$HWVER"
	[ "$PIN" != "" ] && DEVDATA="$DEVDATA -e pin=$PIN"
	[ "$WIFIPWD" != "" ] && DEVDATA="$DEVDATA -e psk=$WIFIPWD"
	[ "$WLAN24SSID" != "" ] && DEVDATA="$DEVDATA -e wifissid_2g=$WLAN24SSID"
	[ "$WLAN5SSID" != "" ] && DEVDATA="$DEVDATA -e wifissid_5g=$WLAN5SSID"
	#we will save txbf parameters in F1, but we write mac in F4, so remove this, or txbf will be erased
	#echo "clean devdata"
	#devdata clean
	echo "devdata set -e mfcmode=0 -e countrycode=$CCODE $DEVDATA -f" > /dev/console
	devdata set -e mfcmode=0 -e countrycode=$CCODE $DEVDATA -f

	# Show devdata and uboot data
	echo "-------- devdata dump ----------------------" > /var/mfcdump
	devdata dump >> /var/mfcdump
	cat /var/mfcdump
	rm /var/mfcdump
	;;
dump)
	# Show devdata
	echo "-------- Firmware Version-------------------" > /var/mfcdump
	echo FW_Ver=`cat /etc/config/buildver``cat /etc/config/buildrev` Build `cat /etc/config/buildno` >> /var/mfcdump
	echo "-------- devdata dump ----------------------" >> /var/mfcdump
	devdata dump >> /var/mfcdump
	echo "-------- ubcfg get ethaddr ipaddr-----------" >> /var/mfcdump
	cat /var/mfcdump
	rm /var/mfcdump
	;;
wlan24)
	xmldbc -s /wifi/entry:1/ssid "$2"
	xmldbc -s /phyinf:4/media/channel "$3"
	xmldbc -s /phyinf:4/media/dot11n/bw2040coexist "0"
	xmldbc -s /wifi/entry:1/authtype "OPEN"
	xmldbc -s /wifi/entry:1/encrtype "NONE"
	service PHYINF.WIFI restart
	;;
wlan5)
	xmldbc -s /wifi/entry:3/ssid "$2"
	xmldbc -s /phyinf:6/media/channel "$3"
	xmldbc -s /wifi/entry:3/authtype "OPEN"
	xmldbc -s /wifi/entry:3/encrtype "NONE"
	service PHYINF.WIFI restart
	;;
ver)
	echo Ver `cat /etc/config/buildver``cat /etc/config/buildrev` Build `cat /etc/config/buildno`
	;;
get)
	case $2 in
	hwver)
		#if [ -f /etc/config/hwver ]; then
		#	cat /etc/config/hwver
		#else
			devdata get -e $2
		#fi
		;;
	*)
		[ "$2" != "" ] && devdata get -e $2
		;;
	esac
	;; 
set)
	[ "$2" != "" ] && devdata set -e $2
	;;
test)
	case $2 in
	on)
		usockc /var/gpio_ctrl DEBUG
		;;
	off)
		usockc /var/gpio_ctrl NODEBUG
		;;
	esac
	;; 
button)
	case $2 in
	reset)
		usockc /var/gpio_ctrl GPIO_FRESET
		cat /var/gpio_ctrl_result
		;;
	wps)
		usockc /var/gpio_ctrl GPIO_WPSPBC
		cat /var/gpio_ctrl_result
		;;
	esac
	;;
led)
	case "$2" in
	wan_green)
		usockc /var/gpio_ctrl INET_GREEN_ON
		;;
	wan_orange)
		usockc /var/gpio_ctrl INET_ORANGE_ON
		;;
	status_green)
		usockc /var/gpio_ctrl STATUS_GREEN
		;;
	status_orange)
		usockc /var/gpio_ctrl STATUS_AMBER
		;;
	usb2_on)
		usockc /var/gpio_ctrl USB2_LED_ON
		;;
	usb2_off)
		usockc /var/gpio_ctrl USB2_LED_OFF
		;;
	usb3_on)
		usockc /var/gpio_ctrl USB3_LED_ON
		;;
	usb3_off)
		usockc /var/gpio_ctrl USB3_LED_OFF
		;;
	esac
	;;
usb2)
#usb device table | grep topology information | grep non-hub device | grep usb2 port string (Port=01)
	USB2STATUS=`cat /proc/bus/usb/devices  | grep T: | grep -v "Dev#=  1" | grep "Port=01"`
	if [ "$USB2STATUS" != "" ]; then
		echo "Yes"
	else
		echo "NO"
	fi
	;;
usb3)
#usb device table | grep topology information | grep non-hub device | grep usb3 port string (Port=00)
	USB3STATUS=`cat /proc/bus/usb/devices  | grep T: | grep -v "Dev#=  1" | grep "Port=00"`
	if [ "$USB3STATUS" != "" ]; then
		echo "Yes"
	else
		echo "NO"
	fi
	;;
mode)
	case $2 in
	on)
		devdata set -e mfcmode=1
		echo "Enable mfc mode!"
		;;
	off)
		devdata set -e mfcmode=0
		echo "Disable mfc mode!"		
		;;
	state)
		MFCST=`devdata get -e mfcmode`
		if [ "$MFCST" == "1" ]; then
			echo "on"
		else
			echo "off"
		fi		
		;;		
	esac
	;;
turbomode)
	case $2 in
	on)
		devdata set -e turbomode=1
		echo "Enable turbomode!"
		;;
	off)
		devdata set -e turbomode=0
		echo "Disable turbomode!"
		;;
	state)
		TURBO=`devdata get -e turbomode`
		if [ "$TURBO" == "1" ]; then
			echo "on"
		else
			echo "off"
		fi
		;;
	esac
	;;
txbf)
	if [ $# -ne 6 ]; then
		echo "Usage:"
		echo "  mfc txbf <rpcal2g> <rpcal5gb0> <rpcal5gb1> <rpcal5gb2> <rpcal5gb3>"
		exit 1
	fi
	devdata set -e rpcal2g=$2 -e rpcal5gb0=$3 -e rpcal5gb1=$4 -e rpcal5gb2=$5 -e rpcal5gb3=$6
	;;
*)
	echo "Usage: mfc {command} <params>"
	echo "Commands:"
	echo "  init <lanmac> <wlan24mac> <wlan5mac> <wanmac> <countrycode> <hw version> <pin> <wifipassword> <wlan24ssid> <wlan5ssid>"
	echo "                           Init flash"
	echo "  save                     Save current setting to flash"
	echo ""
	echo "  dump                     Dump environment vairables."
	echo "  ver                      Show firmware version"
	echo "  wlan24 <ssid>  <channel> switch ssid  and channel"
	echo "  wlan5  <ssid2> <channel> switch ssid2 and channel"
	echo ""
	echo "  freset                   Factory reset"
	echo "  isfreset                 Check if the device is reset to factory default."
	echo ""
	echo "  test on                  turn on test mode"
	echo "  test off                 turn off test mode"
	echo ""
	echo "  button {reset|wps}"
	echo "      reset                Get factory reset button status."
	echo "      wps                  Get WPS button status."
	echo ""
	echo "  led { wan_green | wan_orange | status_green | status_orange | usb2_on | usb2_off | usb3_on | usb3_off }"
	echo "      wan_green            Set the WAN Led to green "
	echo "      wan_orange           Set the WAN Led to orange"
	echo "      status_green         Set the status Led to green"
	echo "      status_orange        Set the status Led to orange"
	echo "      usb2_on               Set the USB2 Led to green"
	echo "      usb2_off              Turn the USB2 Led off"
	echo "      usb3_on               Set the USB3 Led to green"
	echo "      usb3_off              Turn the USB3 Led off"
	echo ""	
	echo ""	
	echo "  mode { on | off | state }"	
	echo "      on                  turn on mfc mode"
	echo "      off                 turn off mfc mode"	
	echo "      state               check mfc mode state"
	echo ""			
	echo "  turbomode { on | off | state }"
	echo "      on                  turn on turbomode"
	echo "      off                 turn off turbomode"
	echo "      state               check turbomode state"
	echo ""
	echo "  usb2                    show if usb2 port plug flash disk"
	echo "  usb3                    show if usb3 port plug flash disk"
	echo ""
	echo "  txbf <rpcal2g> <rpcal5gb0> <rpcal5gb1> <rpcal5gb2> <rpcal5gb3>"
	;;
esac
